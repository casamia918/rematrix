const rollupPlugins = [require('rollup-plugin-buble')()]

if (!process.env.TRAVIS || process.env.COVERAGE) {
  const istanbul = require('rollup-plugin-istanbul')
  const config = {
    exclude: ['./**', '**/node_modules/**'],
    instrumenterConfig: {
      embedSource: true,
    },
  }
  rollupPlugins.push(istanbul(config))
}

module.exports = function(karma) {
  karma.set({
    frameworks: ['mocha', 'sinon-chai'],

    preprocessors: {
      './**/*.spec.js': ['rollup'],
    },

    files: [{ pattern: './**/*.spec.js', watched: false }],

    rollupPreprocessor: {
      plugins: rollupPlugins,
      output: {
        format: 'iife',
        name: 'Rematrix',
        sourcemap: 'inline',
      },
    },

    singleRun: true,
    colors: true,
    logLevel: karma.LOG_ERROR,
    browserNoActivityTimeout: 60 * 1000,
    captureTimeout: 80 * 1000,
  })

  if (process.env.TRAVIS) {
    if (process.env.COVERAGE) {
      karma.set({
        autoWatch: false,
        browsers: ['ChromeHeadless'],
        coverageReporter: {
          type: 'lcovonly',
          dir: 'coverage/',
        },
        reporters: ['mocha', 'coverage', 'coveralls'],
      })
    } else {
      const customLaunchers = require('./sauce.conf')
      karma.set({
        autoWatch: false,
        browsers: Object.keys(customLaunchers),
        customLaunchers,
        reporters: ['dots', 'saucelabs'],
        hostname: 'localsauce',
        sauceLabs: {
          testName: 'Rematrix',
          build: process.env.TRAVIS_BUILD_NUMBER || 'manual',
          tunnelIdentifier: process.env.TRAVIS_BUILD_NUMBER || 'autoGeneratedTunnelID',
          recordVideo: true,
          connectOptions: {
            tunnelDomains: 'localsauce', // because Android 8 has an SSL error?
          },
        },
      })
    }
  } else {
    karma.set({
      browsers: ['ChromeHeadless'],
      coverageReporter: {
        type: 'lcov',
        dir: '../.ignore/coverage/',
      },
      reporters: ['mocha', 'coverage'],
    })
  }
}
